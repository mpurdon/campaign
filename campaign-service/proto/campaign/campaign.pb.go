// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/campaign/campaign.proto

package go_micro_srv_campaign

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Campaign struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string    `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Rewards              []*Reward `protobuf:"bytes,5,rep,name=rewards,proto3" json:"rewards,omitempty"`
	UserId               string    `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Campaign) Reset()         { *m = Campaign{} }
func (m *Campaign) String() string { return proto.CompactTextString(m) }
func (*Campaign) ProtoMessage()    {}
func (*Campaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_campaign_f42a121d672c10be, []int{0}
}
func (m *Campaign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Campaign.Unmarshal(m, b)
}
func (m *Campaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Campaign.Marshal(b, m, deterministic)
}
func (dst *Campaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Campaign.Merge(dst, src)
}
func (m *Campaign) XXX_Size() int {
	return xxx_messageInfo_Campaign.Size(m)
}
func (m *Campaign) XXX_DiscardUnknown() {
	xxx_messageInfo_Campaign.DiscardUnknown(m)
}

var xxx_messageInfo_Campaign proto.InternalMessageInfo

func (m *Campaign) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Campaign) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Campaign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Campaign) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Campaign) GetRewards() []*Reward {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *Campaign) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Reward struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CampaignId           string   `protobuf:"bytes,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Available            int32    `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reward) Reset()         { *m = Reward{} }
func (m *Reward) String() string { return proto.CompactTextString(m) }
func (*Reward) ProtoMessage()    {}
func (*Reward) Descriptor() ([]byte, []int) {
	return fileDescriptor_campaign_f42a121d672c10be, []int{1}
}
func (m *Reward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reward.Unmarshal(m, b)
}
func (m *Reward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reward.Marshal(b, m, deterministic)
}
func (dst *Reward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reward.Merge(dst, src)
}
func (m *Reward) XXX_Size() int {
	return xxx_messageInfo_Reward.Size(m)
}
func (m *Reward) XXX_DiscardUnknown() {
	xxx_messageInfo_Reward.DiscardUnknown(m)
}

var xxx_messageInfo_Reward proto.InternalMessageInfo

func (m *Reward) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Reward) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *Reward) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Reward) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Reward) GetAvailable() int32 {
	if m != nil {
		return m.Available
	}
	return 0
}

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_campaign_f42a121d672c10be, []int{2}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Response struct {
	Created              bool        `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Campaign             *Campaign   `protobuf:"bytes,2,opt,name=campaign,proto3" json:"campaign,omitempty"`
	Campaigns            []*Campaign `protobuf:"bytes,3,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_campaign_f42a121d672c10be, []int{3}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetCampaign() *Campaign {
	if m != nil {
		return m.Campaign
	}
	return nil
}

func (m *Response) GetCampaigns() []*Campaign {
	if m != nil {
		return m.Campaigns
	}
	return nil
}

func init() {
	proto.RegisterType((*Campaign)(nil), "go.micro.srv.campaign.Campaign")
	proto.RegisterType((*Reward)(nil), "go.micro.srv.campaign.Reward")
	proto.RegisterType((*GetRequest)(nil), "go.micro.srv.campaign.GetRequest")
	proto.RegisterType((*Response)(nil), "go.micro.srv.campaign.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for CampaignService service

type CampaignServiceClient interface {
	CreateCampaign(ctx context.Context, in *Campaign, opts ...client.CallOption) (*Response, error)
	GetCampaigns(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
}

type campaignServiceClient struct {
	c           client.Client
	serviceName string
}

func NewCampaignServiceClient(serviceName string, c client.Client) CampaignServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.campaign"
	}
	return &campaignServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *campaignServiceClient) CreateCampaign(ctx context.Context, in *Campaign, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "CampaignService.CreateCampaign", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campaignServiceClient) GetCampaigns(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "CampaignService.GetCampaigns", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CampaignService service

type CampaignServiceHandler interface {
	CreateCampaign(context.Context, *Campaign, *Response) error
	GetCampaigns(context.Context, *GetRequest, *Response) error
}

func RegisterCampaignServiceHandler(s server.Server, hdlr CampaignServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&CampaignService{hdlr}, opts...))
}

type CampaignService struct {
	CampaignServiceHandler
}

func (h *CampaignService) CreateCampaign(ctx context.Context, in *Campaign, out *Response) error {
	return h.CampaignServiceHandler.CreateCampaign(ctx, in, out)
}

func (h *CampaignService) GetCampaigns(ctx context.Context, in *GetRequest, out *Response) error {
	return h.CampaignServiceHandler.GetCampaigns(ctx, in, out)
}

func init() {
	proto.RegisterFile("proto/campaign/campaign.proto", fileDescriptor_campaign_f42a121d672c10be)
}

var fileDescriptor_campaign_f42a121d672c10be = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0xbf, 0xf4, 0xcf, 0x74, 0x7a, 0xa7, 0xf4, 0x83, 0x80, 0x18, 0xc4, 0xd2, 0x71, 0x56,
	0x5d, 0x8d, 0x50, 0x17, 0x2e, 0xc4, 0x55, 0x17, 0xa5, 0xdb, 0xd8, 0xbd, 0xa4, 0x93, 0x4b, 0x09,
	0xb4, 0x93, 0x31, 0x99, 0xd6, 0xa7, 0xf0, 0x1d, 0x7c, 0x0a, 0x77, 0xbe, 0x9b, 0x4c, 0xc6, 0xb4,
	0x82, 0x0e, 0x15, 0x77, 0xf7, 0xfe, 0x72, 0xcf, 0xe1, 0xe4, 0x26, 0x30, 0x2a, 0x8c, 0x2e, 0xf5,
	0x75, 0x26, 0xb6, 0x85, 0x50, 0xeb, 0xfc, 0x50, 0xa4, 0x8e, 0xd3, 0xb3, 0xb5, 0x4e, 0xb7, 0x2a,
	0x33, 0x3a, 0xb5, 0x66, 0x9f, 0xfa, 0xc3, 0xe4, 0x8d, 0x40, 0x38, 0xfb, 0x6c, 0xe8, 0x10, 0x5a,
	0x4a, 0x32, 0x12, 0x93, 0x49, 0x9f, 0xb7, 0x94, 0xa4, 0x14, 0x3a, 0x99, 0x96, 0xc8, 0x5a, 0x8e,
	0xb8, 0xba, 0x62, 0xb9, 0xd8, 0x22, 0x6b, 0xd7, 0xac, 0xaa, 0x69, 0x0c, 0x91, 0x44, 0x9b, 0x19,
	0x55, 0x94, 0x4a, 0xe7, 0xac, 0xe3, 0x8e, 0xbe, 0x22, 0x7a, 0x0b, 0x3d, 0x83, 0xcf, 0xc2, 0x48,
	0xcb, 0xba, 0x71, 0x7b, 0x12, 0x4d, 0x47, 0xe9, 0x8f, 0x79, 0x52, 0xee, 0xa6, 0xb8, 0x9f, 0xa6,
	0xe7, 0xd0, 0xdb, 0x59, 0x34, 0x8f, 0x4a, 0xb2, 0xc0, 0xd9, 0x06, 0x55, 0xbb, 0x90, 0xc9, 0x0b,
	0x81, 0xa0, 0x1e, 0xfe, 0x16, 0x7b, 0x0c, 0x91, 0xf7, 0xab, 0x74, 0x75, 0x7a, 0xf0, 0x68, 0x21,
	0xff, 0x78, 0x87, 0x4b, 0xe8, 0x8b, 0xbd, 0x50, 0x1b, 0xb1, 0xda, 0x20, 0xeb, 0xc6, 0x64, 0xd2,
	0xe5, 0x47, 0x90, 0x0c, 0x00, 0xe6, 0x58, 0x72, 0x7c, 0xda, 0xa1, 0x2d, 0x93, 0x57, 0x02, 0x21,
	0x47, 0x5b, 0xe8, 0xdc, 0x22, 0x65, 0xd0, 0xcb, 0x0c, 0x8a, 0x12, 0xeb, 0x90, 0x21, 0xf7, 0x2d,
	0xbd, 0x83, 0xd0, 0xc7, 0x72, 0x31, 0xa3, 0xe9, 0xb8, 0x61, 0x2f, 0xfe, 0x8d, 0xf8, 0x41, 0x40,
	0xef, 0xa1, 0xef, 0x6b, 0xcb, 0xda, 0x6e, 0xab, 0x27, 0xd5, 0x47, 0xc5, 0xf4, 0x9d, 0xc0, 0x7f,
	0xcf, 0x1f, 0xd0, 0xec, 0x55, 0x86, 0x74, 0x09, 0xc3, 0x99, 0x8b, 0x76, 0xf8, 0x12, 0xa7, 0x1c,
	0x2f, 0xc6, 0x8d, 0x0f, 0x59, 0xdf, 0x3e, 0xf9, 0x47, 0x97, 0x30, 0x98, 0x63, 0xe9, 0x15, 0x96,
	0x5e, 0x35, 0x48, 0x8e, 0xfb, 0xfb, 0x85, 0xeb, 0x2a, 0x70, 0xff, 0xfa, 0xe6, 0x23, 0x00, 0x00,
	0xff, 0xff, 0x99, 0x9c, 0xdb, 0x8b, 0xf8, 0x02, 0x00, 0x00,
}
